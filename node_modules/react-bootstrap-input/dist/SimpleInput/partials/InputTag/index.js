"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactNumberFormat = require("react-number-format");

var _reactNumberFormat2 = _interopRequireDefault(_reactNumberFormat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @format */
var InputTag = function InputTag(_ref) {
  var type = _ref.type,
      value = _ref.value,
      name = _ref.name,
      onChange = _ref.onChange,
      readonly = _ref.readonly,
      autoFocus = _ref.autoFocus,
      currency = _ref.currency,
      inputRef = _ref.inputRef;

  var onNumericValueChange = function onNumericValueChange(e) {
    if (e.target.value !== value) {
      onChange(e);
    }
  };
  var suffix = " " + currency;

  switch (type) {
    case "money":
      suffix = " " + currency;
      return _react2.default.createElement(_reactNumberFormat2.default, {
        getInputRef: function getInputRef(el) {
          inputRef.current = el;
        },
        value: value,
        className: "form-control",
        decimalSeparator: ",",
        thousandSeparator: ".",
        suffix: suffix,
        name: name,
        readOnly: readonly,
        onChange: onChange,
        autoFocus: autoFocus
      });
    case "number":
      suffix = "";
      return _react2.default.createElement(_reactNumberFormat2.default, {
        getInputRef: function getInputRef(el) {
          inputRef.current = el;
        },
        placeholder: "",
        value: value,
        className: "form-control",
        decimalSeparator: ",",
        thousandSeparator: ".",
        suffix: suffix,
        name: name,
        readOnly: readonly,
        onChange: onNumericValueChange,
        autoFocus: autoFocus
      });
    case "tel":
      suffix = "";
      return _react2.default.createElement(_reactNumberFormat2.default, {
        getInputRef: function getInputRef(el) {
          inputRef.current = el;
        },
        type: "tel",
        placeholder: "",
        value: value,
        className: "form-control",
        suffix: suffix,
        name: name,
        readOnly: readonly,
        onChange: onNumericValueChange,
        autoFocus: autoFocus
      });
    case "percent":
    case "percent1":
      return _react2.default.createElement(_reactNumberFormat2.default, {
        getInputRef: function getInputRef(el) {
          inputRef.current = el;
        },
        value: value,
        className: "form-control",
        decimalSeparator: ",",
        thousandSeparator: ".",
        suffix: " %",
        readOnly: readonly,
        name: name,
        onChange: onNumericValueChange,
        autoFocus: autoFocus
      });
    case "date":
      return _react2.default.createElement(_reactNumberFormat2.default, {
        getInputRef: function getInputRef(el) {
          inputRef.current = el;
        },
        value: value,
        name: name,
        className: "form-control"
        // placeholder="31/01/2015"
        , format: "##/##/####",
        mask: "_",
        readOnly: readonly,
        onChange: onChange,
        autoFocus: autoFocus
      });
    default:
      return _react2.default.createElement("input", {
        ref: inputRef,
        type: type,
        value: value,
        name: name,
        onChange: onChange,
        className: "form-control",
        readOnly: readonly,
        placeholder: "",
        autoFocus: autoFocus
      });
  }
};

InputTag.displayName = "InputTag";

exports.default = InputTag;